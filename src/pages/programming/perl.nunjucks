<!-- index.nunjucks -->
{% extends "layout.nunjucks" %}

{% block content %}


<!-- Adds the navigation partial -->
<!-- Importing Nunjucks Macro -->
{% import 'macros/navigation.nunjucks' as nav %}
{{nav.active('programming')}}

  <div class="container-fluid maincontent">
    <div class="row">
      <div class="col-md-12">

        <!-- PAGE CONTENT -->
        <h1>Perl</h1>
        <p>
          My experience in Perl can be measured in decades, since a University
          friend gave me a quick introduction into how useful it can be.
        </p>
        <dl>


          <dt>Salter MiBody - BODYDATA.TXT parsing</dt>
          <dd>
            Their desktop app is poor, and obviously windows only. <sup data-text="It might run under wine. It is reliant on the USB subystem though">1</sup>
            I wanted a more flexible solution for just reading the data into a database, maybe even
            into google fit. On the plus side the scales write a file onto a USB stick with a standard
            FAT filesystem so grabbing the BODYDATA.TXT was nice and simple. However their "TXT" file
            is actually binary data. I did try contact them asking for a spec but was declined. So I
            did some research and reverse-engineered the format. I have a working prototype
            <a href="https://github.com/vagnerr/mibody">on GitHub <img src="/img/social/GitHub-Mark-64px.png" class="social-icon" alt="[GH]"></a>
            that reads and displays the content allong with some of the calculated values such as BMI.
            I might make a proper CPAN module at some point. <sup data-text="... or maybe a Raspbery PI directly attached pretending to be a USB stick... :-)">1</sup>
          </dd>

          <dt><a href="/projects/parse-webcounter.html">
            Parse::WebCounter
            </a>
          </dt>
          <dd>
            A simple perlmodule that can read back the value
            of a standard graphical webcounter. More detail
            can be found <a href="/projects/parse-webcounter.html">here</a>.
          </dd>


          <dt>SETI@home</dt>
          <dd>
          I used to have a number of machines in my home network and the
          spare CPU cycles were dedicated to the
          <a href="http://www.setiathome.ssl.berkeley.edu/">
            SETI Project
          </a>.
          Obviously being involved in that is all about the stats
          so I had written a number of simple Perl scripts to
          extract current user and group stats from the XML feeds
          that the seti server supplies. There are pages on the
          seti server to display the data already, but I wanted
          to play and not have to browse the site to get the
          stats all the time. I have three scripts at the moment.

          Sadly the API is no longer available so they no longer
          do anything :-{

          <dl class="dl-horizontal">
            <dt><a href="getstat.pl">getstat.pl</a></dt>
            <dd>
            Grabs the data for a particular user (by email
            address) and prints it to the screen.
            </dd>
            <dt><a href="getstats.pl">getstats.pl</a></dt>
            <dd>
            Grabs the stats for a particular group (by name)
            and lists all the users in order of most
            reported blocks.
            </dd>
            <dt><a href="storestats.pl">storestats.pl</a></dt>
            <dd>
            Similar to getstats.pl, however instead of
            printing out the results it stores the data in
            a database. You can then run it daily as a cron
            job and collect a nice amount of data for
            generating graphs of your progress against the
            progress of fellow team mates (will be working
            on these analysis scripts next).
            </dd>

          </dl>

          </dd>

        </dl>
        </p>

      </div>
    </div>
  </div>
  {% include "partials/superscript_popup.nunjucks" %}


<!-- Adds the footer partial -->
{% include "partials/footer.nunjucks" %}



{% endblock %}